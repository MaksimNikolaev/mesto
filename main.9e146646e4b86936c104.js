!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._title=e.name,this._link=e.link,this._likes=e.likes,this._cardId=e._id,this._userID=e.userId,this._ownerID=e.ownerId,this._selector=n,this._handleCardClick=r,this._handleRemoveCard=o,this._handleLikeClickAdd=i,this._handleLikeClickRemove=a}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".elements__item").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._elementLike=this._element.querySelector(".elements__like"),this._elementCountLike=this._element.querySelector(".elements__count-like"),this._cardTitle=this._element.querySelector(".elements__title"),this._cardImage=this._element.querySelector(".elements__photo"),this._trash=this._element.querySelector(".elements__trash"),this._cardTitle.textContent=this._title,this._elementCountLike.textContent=String(this._likes.length),this._cardImage.src=this._link,this._cardImage.alt=this._title,this._isOwner(),this._isLiked(),this._setEventListeners(),this._element}},{key:"_isOwner",value:function(){this._userID!==this._ownerID&&this._removeIconTrash(this._trash)}},{key:"_isLiked",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._userID?e.addLike():e.removeLike()}))}},{key:"_removeIconTrash",value:function(e){e.remove(),e=null}},{key:"addLike",value:function(){this._elementLike.classList.add("elements__like_active")}},{key:"removeLike",value:function(){this._elementLike.classList.remove("elements__like_active")}},{key:"setCountLike",value:function(e){this._elementCountLike.textContent=String(e.likes.length)}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){var e=this;this._elementLike.addEventListener("click",(function(){e._elementLike.classList.contains("elements__like_active")?e._handleLikeClickRemove():e._handleLikeClickAdd()})),this._trash.addEventListener("click",(function(){return e._handleRemoveCard()})),this._cardImage.addEventListener("click",(function(){return e._handleCardClick()}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),r(this,"_disabledButton",(function(){o.buttonElement.classList.add(o._inactiveButtonClass),o.buttonElement.disabled=!0})),r(this,"_toggleButtonState",(function(){o._hasInvalidInput()?o._disabledButton():(o.buttonElement.classList.remove(o._inactiveButtonClass),o.buttonElement.disabled=!1)})),r(this,"_showInputError",(function(e,t){var n=o._form.querySelector("#".concat(e.id,"-error"));e.classList.add(o._inputErrorClass),n.textContent=t,n.classList.add(o._errorClass)})),r(this,"_hideInputError",(function(e){var t=o._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(o._inputErrorClass),t.classList.remove(o._errorClass),t.textContent=""})),r(this,"_checkInputValidity",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this.buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector))}var t,o;return t=e,(o=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},s.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return h(e)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e,t){var n,r=t.card;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._card=r,n._callBackSubmitForm=n._callBackSubmitForm.bind(h(n)),n._form=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"_callBackSubmitForm",value:function(){this._card(this._data)}},{key:"setEventListeners",value:function(){var e=this;s(d(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(){return e._callBackSubmitForm()}))}},{key:"open",value:function(e){this._data=e,s(d(a.prototype),"open",this).call(this)}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._photoFull=t._popup.querySelector(".popup__photo"),t._photoCaption=t._popup.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._photoFull.src=n,this._photoCaption.textContent=t,this._photoFull.alt=t,m(w(a.prototype),"open",this).call(this)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function I(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._callBackSubmitForm=t,n._form=n._popup.querySelector(".popup__form"),n._inputList=n._form.querySelectorAll(".popup__input"),n._submitButton=n._form.querySelector(".popup__button"),n._oldValueSubmitButton=n._submitButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){return e[t.name]=t.value})),e}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"renderLoading",value:function(e,t){this._submitButton.textContent=e?t:this._oldValueSubmitButton}},{key:"setEventListeners",value:function(){var e=this;C(P(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(){e._callBackSubmitForm(e._getInputValues())}))}},{key:"close",value:function(){C(P(a.prototype),"close",this).call(this),this._form.reset()}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this.setUserAvatar(e)}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar,this._avatar.alt="".concat(e.name," avatar")}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V,D=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_errorHandler",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("https://mesto.".concat(this._url,"cards"),{headers:this._headers}).then(this._errorHandler)}},{key:"getInitialUser",value:function(){return fetch("https://".concat(this._url,"users/me"),{headers:this._headers}).then(this._errorHandler)}},{key:"setUserInfo",value:function(e){return fetch("https://mesto.".concat(this._url,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._errorHandler)}},{key:"addCard",value:function(e,t){return fetch("https://mesto.".concat(this._url,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._errorHandler)}},{key:"removeCard",value:function(e){return fetch("https://mesto.".concat(this._url,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._errorHandler)}},{key:"addLike",value:function(e){return fetch("https://mesto.".concat(this._url,"cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._errorHandler)}},{key:"removeLike",value:function(e){return fetch("https://mesto.".concat(this._url,"cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._errorHandler)}},{key:"updateAvatar",value:function(e){return fetch("https://mesto.".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._errorHandler)}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),U=document.querySelector(".profile__edit-button"),F=document.querySelector(".profile__add-button"),H=document.querySelector(".profile__button");function N(e){var n=function(e){var n=new t({name:e.name,link:e.link,likes:e.likes,_id:e._id,userId:V,ownerId:e.owner._id},".cards-template",(function(){return M.open(e)}),(function(){return W.open(n)}),(function(){Z.addLike(e._id).then((function(e){n.setCountLike(e),n.addLike()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}),(function(){Z.removeLike(e._id).then((function(e){n.setCountLike(e),n.removeLike()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}));return n.generateCard()}(e);Y.addItem(n)}U.addEventListener("click",(function(){K.open(),z.editForm.resetValidation();var e=X.getUserInfo();K.setInputValues(e)})),H.addEventListener("click",(function(){Q.open(),z.updateAvatarForm.resetValidation();var e=X.getUserInfo();Q.setInputValues(e)})),F.addEventListener("click",(function(){G.open(),z.addForm.resetValidation()}));var J,z={};J={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error"},Array.from(document.querySelectorAll(J.formSelector)).forEach((function(e){var t=new o(J,e),n=e.getAttribute("name");z[n]=t,t.enableValidation()}));var M=new L(".popup_photo");M.setEventListeners();var G=new B(".popup_add",(function(e){G.renderLoading(!0,"Создание..."),Z.addCard(e.name,e.link).then((function(e){return N(e)})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){G.renderLoading(!1)})),G.close()}));G.setEventListeners();var K=new B(".popup_edit",(function(e){K.renderLoading(!0,"Сохранение..."),Z.setUserInfo(e).then((function(e){return X.setUserInfo(e)})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){K.renderLoading(!1)})),K.close()}));K.setEventListeners();var Q=new B(".popup_updateAvatar",(function(e){Q.renderLoading(!0,"Сохранение..."),Z.updateAvatar(e).then((function(e){X.setUserAvatar(e),Q.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){Q.renderLoading(!1)}))}));Q.setEventListeners();var W=new _(".popup_deleteCard",{card:function(e){return Z.removeCard(e._cardId).then((function(){e.removeCard(),W.close()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}});W.setEventListeners();var X=new T({nameSelector:".profile__title",aboutSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),Y=new x({items:[],renderer:N},".elements__items");Y.renderItems();var Z=new D({url:"nomoreparties.co/v1/cohort-41/",headers:{authorization:"e43cf3d4-dce7-474b-8529-7a9891978e41","content-type":"application/json"}});Z.getInitialUser().then((function(e){V=e._id,X.setUserInfo(e)})).catch((function(e){return console.log(e)})),Z.getInitialCards().then((function(e){e.reverse().map((function(e){N(e)}))})).catch((function(e){return console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,